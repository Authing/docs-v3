{"remainingRequest":"/Users/zhaoyiming/Desktop/github/docs-v3/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhaoyiming/Desktop/github/docs-v3/docs/.vuepress/theme/layouts/Layout.vue?vue&type=style&index=0&lang=stylus&","dependencies":[{"path":"/Users/zhaoyiming/Desktop/github/docs-v3/docs/.vuepress/theme/layouts/Layout.vue","mtime":1666259371821},{"path":"/Users/zhaoyiming/Desktop/github/docs-v3/node_modules/css-loader/dist/cjs.js","mtime":1640086848626},{"path":"/Users/zhaoyiming/Desktop/github/docs-v3/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1654776219582},{"path":"/Users/zhaoyiming/Desktop/github/docs-v3/node_modules/postcss-loader/src/index.js","mtime":1640086848843},{"path":"/Users/zhaoyiming/Desktop/github/docs-v3/node_modules/stylus-loader/index.js","mtime":1640086849576},{"path":"/Users/zhaoyiming/Desktop/github/docs-v3/node_modules/cache-loader/dist/cjs.js","mtime":1640086848432},{"path":"/Users/zhaoyiming/Desktop/github/docs-v3/node_modules/vue-loader/lib/index.js","mtime":1654776219582}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoudGhlbWUtY29udGFpbmVyCiAgLnNpZGViYXItbWFzawogICAgLy8gdHJhbnNpdGlvbiB0cmFuc2Zvcm0gLjJzCiAgICAvLyBkaXNwbGF5IGJsb2NrCiAgICBiYWNrZ3JvdW5kLWNvbG9yIHJnYmEoMCwgMCwgMCwgMC4yNSkKICAgIC8vIHRyYW5zZm9ybSB0cmFuc2xhdGVYKDEwMCUpCiAgICAvLyBvcGFjaXR5OiAwOwogIC8vICYuc2lkZWJhci1vcGVuCiAgLy8gICAuc2lkZWJhci1tYXNrCiAgLy8gICAgIHRyYW5zZm9ybSB0cmFuc2xhdGVYKDApCiAgLy8gICAgIG9wYWNpdHk6IDE7Cg=="},{"version":3,"sources":["Layout.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4aA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Layout.vue","sourceRoot":"docs/.vuepress/theme/layouts","sourcesContent":["<template>\n  <div\n    class=\"theme-container\"\n    :class=\"pageClasses\"\n    @touchstart=\"onTouchStart\"\n    @touchend=\"onTouchEnd\"\n    :key=\"appId\"\n  >\n    <notifications\n      classes=\"top-center-vue-notification vue-notification\"\n      group=\"message\"\n      position=\"top center\"\n    />\n\n    <Navbar v-if=\"shouldShowNavbar\" @toggle-sidebar=\"toggleSidebar\" />\n\n    <div class=\"sidebar-mask\" @click=\"toggleSidebar(false)\" />\n\n    <Home v-if=\"$page.frontmatter.home\">\n      <template #sidebar>\n        <Sidebar :items=\"sidebarItems\" @toggle-sidebar=\"toggleSidebar\">\n          <template #top>\n            <slot name=\"sidebar-top\" />\n          </template>\n          <template #bottom>\n            <slot name=\"sidebar-bottom\" />\n          </template>\n        </Sidebar>\n      </template>\n    </Home>\n\n    <ApplicationIntegration v-else-if=\"$page.frontmatter.integrationList\">\n      <template #sidebar>\n        <Sidebar :items=\"sidebarItems\" @toggle-sidebar=\"toggleSidebar\">\n          <template #top>\n            <slot name=\"sidebar-top\" />\n          </template>\n          <template #bottom>\n            <slot name=\"sidebar-bottom\" />\n          </template>\n        </Sidebar>\n      </template>\n    </ApplicationIntegration>\n\n    <Quickstarts v-else-if=\"$page.frontmatter.quickstarts\">\n      <template #sidebar>\n        <Sidebar :items=\"sidebarItems\" @toggle-sidebar=\"toggleSidebar\">\n          <template #top>\n            <slot name=\"sidebar-top\" />\n          </template>\n          <template #bottom>\n            <slot name=\"sidebar-bottom\" />\n          </template>\n        </Sidebar>\n      </template>\n    </Quickstarts>\n\n    <Reference v-else-if=\"$page.frontmatter.reference\">\n      <template #sidebar>\n        <Sidebar :items=\"sidebarItems\" @toggle-sidebar=\"toggleSidebar\">\n          <template #top>\n            <slot name=\"sidebar-top\" />\n          </template>\n          <template #bottom>\n            <slot name=\"sidebar-bottom\" />\n          </template>\n        </Sidebar>\n      </template>\n      <template #breadcrumb>\n        <Breadcrumb :sidebars=\"sidebarItems\" />\n      </template>\n      <template #top>\n        <slot name=\"page-top\"></slot>\n      </template>\n      <template #bottom>\n        <slot name=\"page-bottom\"> </slot>\n      </template>\n    </Reference>\n\n    <Page v-else :sidebar-items=\"sidebarItems\" :isInConsole=\"isInConsole\">\n      <template #sidebar>\n        <Sidebar :items=\"sidebarItems\" @toggle-sidebar=\"toggleSidebar\">\n          <template #top>\n            <slot name=\"sidebar-top\" />\n          </template>\n          <template #bottom>\n            <slot name=\"sidebar-bottom\" />\n          </template>\n        </Sidebar>\n      </template>\n      <template #breadcrumb>\n        <Breadcrumb :sidebars=\"sidebarItems\" />\n      </template>\n      <template #top>\n        <slot name=\"page-top\"></slot>\n      </template>\n      <template #bottom>\n        <slot name=\"page-bottom\"> </slot>\n      </template>\n    </Page>\n\n    <Footer />\n  </div>\n</template>\n\n<script>\nimport Home from \"@theme/components/Home/index.vue\";\nimport ApplicationIntegration from \"@theme/components/ApplicationIntegration/index.vue\";\nimport Navbar from \"@theme/components/Navbar.vue\";\nimport Page from \"@theme/components/Page.vue\";\nimport Sidebar from \"@theme/components/Sidebar.vue\";\nimport { setCookie, delCookie } from \"@theme/util\";\nimport Footer from \"@theme/components/Footer/index.vue\";\nimport Breadcrumb from \"@theme/components/Breadcrumb.vue\";\nimport Quickstarts from \"@theme/components/Quickstarts/index.vue\";\nimport PageSidebar from \"@theme/components/PageSidebar.vue\";\nimport Reference from \"@theme/components/Reference/index.vue\";\nimport querystring from \"query-string\";\n\nimport { sidebarList } from \"@dynamic/sidebar-caches\";\n\nexport default {\n  name: \"Layout\",\n  components: {\n    Home,\n    Page,\n    Sidebar,\n    Navbar,\n    Footer,\n    Breadcrumb,\n    PageSidebar,\n    ApplicationIntegration,\n    Quickstarts,\n    Reference,\n  },\n\n  data() {\n    return {\n      isSidebarOpen: false,\n      isInConsole: \"\",\n      appId: \"\",\n    };\n  },\n\n  computed: {\n    shouldShowNavbar() {\n      const { themeConfig } = this.$site;\n      const { frontmatter } = this.$page;\n      if (frontmatter.navbar === false || themeConfig.navbar === false) {\n        return false;\n      }\n      return (\n        this.$title ||\n        themeConfig.logo ||\n        themeConfig.repo ||\n        themeConfig.nav ||\n        this.$themeLocaleConfig.nav\n      );\n    },\n\n    shouldShowSidebar() {\n      const { frontmatter } = this.$page;\n      return (\n        !frontmatter.home &&\n        frontmatter.sidebar !== false &&\n        this.sidebarItems.length\n      );\n    },\n\n    sidebarItems() {\n      const regularPath = this.$page.regularPath;\n      const matchedNavPath = regularPath.slice(\n        0,\n        regularPath.indexOf(\"/\", regularPath.startsWith(\"/en/\") ? 4 : 1) + 1\n      );\n      return sidebarList?.[matchedNavPath]?.list || [];\n    },\n\n    pageClasses() {\n      const userPageClass = this.$page.frontmatter.pageClass;\n      return [\n        {\n          \"no-navbar\": !this.shouldShowNavbar,\n          \"sidebar-open\": this.isSidebarOpen,\n          \"no-sidebar\": !this.shouldShowSidebar,\n        },\n        userPageClass,\n      ];\n    },\n  },\n\n  mounted() {\n    console.log('this.$page: ')\n    this.$router.afterEach(() => {\n      this.isSidebarOpen = false;\n    });\n\n    [\"utm_term\", \"utm_source\", \"utm_campaign\", \"utm_medium\"].forEach((item) =>\n      delCookie(item)\n    );\n    let search = querystring.parse(\n      typeof window !== \"undefined\" && window.location.search\n    );\n\n    Object.keys(search).forEach((k) => {\n      let v = search[k];\n      setCookie(k, v);\n    });\n    this.registerMessage();\n    if (this.$route.query.isInConsoleAppDetail) {\n      this.$themeConfig.isInConsoleAppDetail = true;\n    }\n  },\n\n  beforeDestroy() {\n    window.removeEventListener(\"message\");\n  },\n\n  methods: {\n    findDom(domClass, params) {\n      let _this = this;\n      let elements = [...document.querySelectorAll(domClass)];\n\n      let keys = Object.keys(params);\n\n      keys.forEach((key, index) => {\n        let found = elements.filter((d) => d.innerHTML.indexOf(key) !== -1);\n\n        if (found.length !== 0) {\n          let targetDOM = _this.findTarget(found, key);\n\n          targetDOM.forEach((node) => {\n            node.innerHTML = `'${params[key]}'`;\n          });\n        }\n      });\n    },\n\n    findTarget(doms, key) {\n      let codes = doms.reduce((current, next) => {\n        let code = [...next.children].find(\n          (d) => d.nodeType === 1 && d.nodeName === \"CODE\"\n        );\n        current.push(code);\n        return current;\n      }, []);\n\n      let children = codes.reduce((current, next) => {\n        current = current.concat([...next.children]);\n        return current;\n      }, []);\n\n      let targets = children.filter((d) => d.innerHTML.indexOf(key) !== -1);\n\n      return targets;\n    },\n\n    // 进行字符串替换方法\n    replaceString(repStr, rgExp, replaceText) {\n      var str = repStr.replace(rgExp, replaceText);\n      if (str.indexOf(rgExp) != -1) {\n        str = this.replaceString(str, rgExp, replaceText);\n      }\n      return str;\n    },\n    // 注册消息事件来自 fe console\n    registerMessage() {\n      if (window) {\n        let _this = this;\n        window.addEventListener(\"message\", (evt) => {\n          try {\n            const { event, data } = JSON.parse(evt.data);\n            if (event.source === \"authing-fe-console\") {\n              // 1. 隐藏头部和顶部区域\n              _this.hiddenModule();\n              _this.isInConsole = event.eventType;\n            }\n\n            let target = {};\n\n            // 这里判断是在控制台快速开始文档，要操作的步骤\n            if (event.isQuickDocs) {\n              if (data.appId) {\n                target[\"AUTHING_APP_ID\"] = data.appId;\n              }\n              if (data.userPoolId) {\n                target[\"AUTHING_USERPOOL_ID\"] = data.userPoolId;\n              }\n              if (data.secret) {\n                target[\"AUTHING_SECRET\"] = data.secret;\n              }\n              if (data.domain) {\n                target[\"AUTHING_DOMAIN\"] = data.domain;\n              }\n              if (data.redirectUri) {\n                target[\"AUTHING_REDIRECTURI\"] = data.redirectUri;\n              }\n              if (data.logoutRedirectUris) {\n                target[\"AUTHING_LOGOUTREDIRECTURI\"] = data.logoutRedirectUris;\n              }\n              if (data.scope) {\n                target[\"AUTHING_SCOPE\"] = data.scope;\n              }\n              if (data.userPoolSecret) {\n                target[\"AUTHING_USERPOOL_SECRET\"] = data.userPoolSecret;\n              }\n              if (data.appId) {\n                target[\"APP_ID\"] = data.appId;\n              }\n\n              _this.$nextTick(() => {\n                _this.findDom(\"pre[class*='language-']\", target);\n              });\n\n              _this.quickDocsStyle();\n            }\n          } catch (e) {}\n        });\n      }\n    },\n    // 控制台快速开始文档样式调整\n    quickDocsStyle() {\n      let mainContent = document.querySelector(\"[class*='main-content']\");\n      let lauoutContent = document.querySelector(\"[class*='page']\");\n      let breadcrumbContent = document.querySelector(\n        \"[class*='breadcrumb-content-container']\"\n      );\n      if (mainContent) {\n        mainContent.style = \"margin-top: 0\";\n      }\n      if (lauoutContent) {\n        lauoutContent.style = \"padding: 0\";\n      }\n      if (breadcrumbContent) {\n        breadcrumbContent.style = \"margin: 0 !important\";\n      }\n    },\n    // 1. 移除模块\n    hiddenModule() {\n      let aside = document.querySelector(\"aside[class='sidebar']\");\n      let header = document.querySelector(\"header[class*='navbar']\");\n      let footer = document.querySelector(\"footer[class*='footer']\");\n      let body = document.body;\n      let newAside = document.querySelector(\n        \"aside[class='on-this-page-navigation']\"\n      );\n      let authingLastUpdate = document.querySelector(\n        \"div[class='authing-last-updated']\"\n      );\n\n      let feedback = document.querySelector(\"div[class='feedback']\");\n\n      if (aside) {\n        aside.style = \"display:none;\";\n      }\n\n      if (header) {\n        header.style = \"display:none;\";\n      }\n\n      if (footer) {\n        footer.style = \"display:none;\";\n      }\n\n      if (newAside) {\n        newAside.style = \"display:none;\";\n      }\n\n      if (authingLastUpdate) {\n        authingLastUpdate.style = \"display:none;\";\n      }\n\n      if (feedback) {\n        feedback.style = \"display:none;\";\n      }\n\n      if (body) {\n        body.style = \"padding-right:16px;\";\n      }\n\n      let h2 = document.querySelectorAll(\n        \"div[class*='theme-default-content'] h2\"\n      );\n      let h3 = document.querySelectorAll(\n        \"div[class*='theme-default-content'] h3\"\n      );\n\n      if (h2) {\n        h2.forEach((el) => {\n          el.style = \"margin-top:10px;padding-top:0px;\";\n        });\n      }\n      if (h3) {\n        h3.forEach((el) => {\n          el.style = \"margin-top:10px;padding-top:0px;\";\n        });\n      }\n    },\n\n    toggleSidebar(to) {\n      this.isSidebarOpen = typeof to === \"boolean\" ? to : !this.isSidebarOpen;\n      this.$emit(\"toggle-sidebar\", this.isSidebarOpen);\n    },\n\n    // side swipe\n    onTouchStart(e) {\n      this.touchStart = {\n        x: e.changedTouches[0].clientX,\n        y: e.changedTouches[0].clientY,\n      };\n    },\n\n    onTouchEnd(e) {\n      const dx = e.changedTouches[0].clientX - this.touchStart.x;\n      const dy = e.changedTouches[0].clientY - this.touchStart.y;\n      if (Math.abs(dx) > Math.abs(dy) && Math.abs(dx) > 40) {\n        if (dx > 0 && this.touchStart.x <= 80) {\n          this.toggleSidebar(true);\n        } else {\n          this.toggleSidebar(false);\n        }\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"stylus\">\n.theme-container\n  .sidebar-mask\n    // transition transform .2s\n    // display block\n    background-color rgba(0, 0, 0, 0.25)\n    // transform translateX(100%)\n    // opacity: 0;\n  // &.sidebar-open\n  //   .sidebar-mask\n  //     transform translateX(0)\n  //     opacity: 1;\n</style>\n"]}]}