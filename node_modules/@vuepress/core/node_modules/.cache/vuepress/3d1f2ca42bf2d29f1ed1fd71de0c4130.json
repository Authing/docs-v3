{"remainingRequest":"/Users/zhaoyiming/Desktop/github/docs-v3/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/zhaoyiming/Desktop/github/docs-v3/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zhaoyiming/Desktop/github/docs-v3/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhaoyiming/Desktop/github/docs-v3/docs/.vuepress/theme/global-components/ApiMethodSpec.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhaoyiming/Desktop/github/docs-v3/docs/.vuepress/theme/global-components/ApiMethodSpec.vue","mtime":1656474814001},{"path":"/Users/zhaoyiming/Desktop/github/docs-v3/node_modules/cache-loader/dist/cjs.js","mtime":1640086848432},{"path":"/Users/zhaoyiming/Desktop/github/docs-v3/node_modules/babel-loader/lib/index.js","mtime":1654776219463},{"path":"/Users/zhaoyiming/Desktop/github/docs-v3/node_modules/cache-loader/dist/cjs.js","mtime":1640086848432},{"path":"/Users/zhaoyiming/Desktop/github/docs-v3/node_modules/vue-loader/lib/index.js","mtime":1654776219582}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZXJyb3IudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZGF0ZS50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZy5qcyI7CgovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwoKLyoqCiAqIOS4juS5i+WJjeeahCA6Ojo6OiBhcGktbWV0aG9kIOWFvOWuuQogKiBwcm9wczoKICogIG1ldGhvZO+8jOivt+axguaWueazle+8jGdldC9wb3N0L3B1dC9wYXRjaAogKiAgaG9zdO+8jOivt+axguWfn+WQjQogKiAgcGF0aO+8jOivt+axgui3r+W+hO+8jOWNsyBVUkwg5Y676ZmkIGhvc3Qg5ZCO55qE6YOo5YiGCiAqICBzdW1tYXJ577yM6K+35rGC5o+P6L+wCiAqICBkZXNjcmlwdGlvbu+8jOWPguaVsOeahOaAu+S9k+aPj+i/sAogKgogKiBzbG90OgogKiAgc3VtbWFyee+8jOivt+axguaPj+i/sO+8jOe6r+Wtl+espuS4suaXtuWPr+eUqCBwcm9wcwogKiAgZGVzY3JpcHRpb27vvIzlj4LmlbDnmoTmgLvkvZPmj4/ov7DvvIznuq/lrZfnrKbkuLLml7blj6/nlKggcHJvcHMKICogIGhlYWRlcnPvvIzor7fmsYLlpLQKICogIHBhdGhQYXJhbXPvvIxwYXRoIOWPguaVsAogKiAgYm9keVBhcmFtc++8jGJvZHkg5Y+C5pWwCiAqICBxdWVyeVBhcmFtc++8jHF1ZXJ5IOWPguaVsAogKiAgZm9ybURhdGFQYXJhbXPvvIxmb3JtRGF0YSDlj4LmlbAKICovCnZhciBnZXRSYW5kb21TdHIgPSBmdW5jdGlvbiBnZXRSYW5kb21TdHIoKSB7CiAgcmV0dXJuIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoKTsKfTsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQXBpTWV0aG9kU3BlYycsCiAgcHJvcHM6IHsKICAgIG1ldGhvZDogewogICAgICB0eXBlOiBTdHJpbmcKICAgIH0sCiAgICBob3N0OiB7CiAgICAgIHR5cGU6IFN0cmluZwogICAgfSwKICAgIHBhdGg6IHsKICAgICAgdHlwZTogU3RyaW5nCiAgICB9LAogICAgc3VtbWFyeTogewogICAgICB0eXBlOiBTdHJpbmcKICAgIH0sCiAgICBkZXNjcmlwdGlvbjogewogICAgICB0eXBlOiBTdHJpbmcKICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICByZXFJbnB1dElkOiBnZXRSYW5kb21TdHIoKSwKICAgICAgcmVzSW5wdXRJZDogZ2V0UmFuZG9tU3RyKCkKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBuZWVkU2hvdzogZnVuY3Rpb24gbmVlZFNob3coa2V5KSB7CiAgICAgIHJldHVybiB0aGlzW2tleV0gfHwgdGhpcy4kc2xvdHNba2V5XSB8fCB0aGlzLiRzY29wZWRTbG90c1trZXldOwogICAgfQogIH0KfTs="},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;EACA;AACA,CAFA;;AAIA;EACAA,qBADA;EAEAC;IACAC;MACAC;IADA,CADA;IAIAC;MACAD;IADA,CAJA;IAOAE;MACAF;IADA,CAPA;IAUAG;MACAH;IADA,CAVA;IAaAI;MACAJ;IADA;EAbA,CAFA;EAmBAK,IAnBA,kBAmBA;IACA;MACAC,0BADA;MAEAC;IAFA;EAIA,CAxBA;EAyBAC;IACAC,QADA,oBACAC,GADA,EACA;MACA;IACA;EAHA;AAzBA","names":["name","props","method","type","host","path","summary","description","data","reqInputId","resInputId","methods","needShow","key"],"sourceRoot":"docs/.vuepress/theme/global-components","sources":["ApiMethodSpec.vue"],"sourcesContent":["<template>\n  <div class=\"api-method\">\n    <div class=\"method\">{{ method.toUpperCase() }}</div>\n    <div class=\"path\">\n      {{ host }}<strong>{{ path }}</strong>\n    </div>\n\n    <div v-if=\"needShow('summary')\" class=\"api-method-summary\">\n      <strong>\n        <slot name=\"summary\">\n          <p>\n            {{ summary }}\n          </p>\n        </slot>\n      </strong>\n    </div>\n\n    <div v-if=\"needShow('description')\" class=\"api-method-description\">\n      <slot name=\"description\">\n        <p>\n          {{ description }}\n        </p>\n      </slot>\n    </div>\n\n    <form class=\"api-method-spec tabs\">\n      <input type=\"radio\" name=\"tabs\" :id=\"`tabone${reqInputId}`\" checked />\n      <label :for=\"`tabone${reqInputId}`\">Request</label>\n      <div class=\"api-method-request tab\">\n        <div v-if=\"needShow('headers')\" class=\"api-method-headers\">\n          <div class=\"parameters-description\">Headers</div>\n          <table>\n            <tbody>\n              <slot name=\"headers\" />\n            </tbody>\n          </table>\n        </div>\n\n        <div v-if=\"needShow('pathParams')\" class=\"api-method-path-parameters\">\n          <div class=\"parameters-description\">Path Paramter</div>\n          <table>\n            <tbody>\n              <slot name=\"pathParams\" />\n            </tbody>\n          </table>\n        </div>\n\n        <div v-if=\"needShow('bodyParams')\" class=\"api-method-body-parameters\">\n          <div class=\"parameters-description\">Body Paramter</div>\n          <table>\n            <tbody>\n              <slot name=\"bodyParams\" />\n            </tbody>\n          </table>\n        </div>\n\n        <div v-if=\"needShow('queryParams')\" class=\"api-method-query-parameters\">\n          <div class=\"parameters-description\">Query Parameters</div>\n          <table>\n            <tbody>\n              <slot name=\"queryParams\" />\n            </tbody>\n          </table>\n        </div>\n\n        <div\n          v-if=\"needShow('formDataParams')\"\n          class=\"api-method-form-data-parameters\"\n        >\n          <div class=\"parameters-description\">Form Data Parameters</div>\n          <table>\n            <tbody>\n              <slot name=\"formDataParams\" />\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      <template v-if=\"needShow('response')\">\n        <input type=\"radio\" name=\"tabs\" :id=\"`tabtwo${resInputId}`\" />\n        <label :for=\"`tabtwo${resInputId}`\">Response</label>\n        <div class=\"api-method-response tab\">\n          <slot name=\"response\" />\n        </div>\n      </template>\n    </form>\n  </div>\n</template>\n\n<script>\n/**\n * 与之前的 ::::: api-method 兼容\n * props:\n *  method，请求方法，get/post/put/patch\n *  host，请求域名\n *  path，请求路径，即 URL 去除 host 后的部分\n *  summary，请求描述\n *  description，参数的总体描述\n *\n * slot:\n *  summary，请求描述，纯字符串时可用 props\n *  description，参数的总体描述，纯字符串时可用 props\n *  headers，请求头\n *  pathParams，path 参数\n *  bodyParams，body 参数\n *  queryParams，query 参数\n *  formDataParams，formData 参数\n */\n\nconst getRandomStr = () => {\n  return Math.random().toString()\n}\n\nexport default {\n  name: 'ApiMethodSpec',\n  props: {\n    method: {\n      type: String,\n    },\n    host: {\n      type: String,\n    },\n    path: {\n      type: String,\n    },\n    summary: {\n      type: String,\n    },\n    description: {\n      type: String,\n    },\n  },\n  data() {\n    return {\n      reqInputId: getRandomStr(),\n      resInputId: getRandomStr(),\n    }\n  },\n  methods: {\n    needShow(key) {\n      return this[key] || this.$slots[key] || this.$scopedSlots[key]\n    },\n  },\n}\n</script>\n\n<style></style>\n"]}]}