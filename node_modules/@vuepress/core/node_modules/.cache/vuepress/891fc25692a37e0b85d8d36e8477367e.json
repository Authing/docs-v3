{"remainingRequest":"/Users/zhaoyiming/Desktop/github/docs-v3/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/zhaoyiming/Desktop/github/docs-v3/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zhaoyiming/Desktop/github/docs-v3/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhaoyiming/Desktop/github/docs-v3/docs/.vuepress/theme/global-components/ApiMethodResponse.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhaoyiming/Desktop/github/docs-v3/docs/.vuepress/theme/global-components/ApiMethodResponse.vue","mtime":1656474814001},{"path":"/Users/zhaoyiming/Desktop/github/docs-v3/node_modules/cache-loader/dist/cjs.js","mtime":1640086848432},{"path":"/Users/zhaoyiming/Desktop/github/docs-v3/node_modules/babel-loader/lib/index.js","mtime":1654776219463},{"path":"/Users/zhaoyiming/Desktop/github/docs-v3/node_modules/cache-loader/dist/cjs.js","mtime":1640086848432},{"path":"/Users/zhaoyiming/Desktop/github/docs-v3/node_modules/vue-loader/lib/index.js","mtime":1654776219582}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdBcGlNZXRob2RSZXNwb25zZScsCiAgcHJvcHM6IHsKICAgIGh0dHBDb2RlOiB7CiAgICAgIHR5cGU6IFtOdW1iZXIsIFN0cmluZ10sCiAgICAgICJkZWZhdWx0IjogMjAwCiAgICB9LAogICAgZGVzY3JpcHRpb246IFN0cmluZwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHJlZ3VsYXJIdHRwQ29kZTogZnVuY3Rpb24gcmVndWxhckh0dHBDb2RlKCkgewogICAgICByZXR1cm4gTnVtYmVyKHRoaXMuaHR0cENvZGUpOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgbmVlZFNob3c6IGZ1bmN0aW9uIG5lZWRTaG93KGtleSkgewogICAgICByZXR1cm4gdGhpc1trZXldIHx8IHRoaXMuJHNsb3RzW2tleV0gfHwgdGhpcy4kc2NvcGVkU2xvdHNba2V5XTsKICAgIH0KICB9Cn07"},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;EACAA,yBADA;EAEAC;IACAC;MACAC,sBADA;MAEA;IAFA,CADA;IAKAC;EALA,CAFA;EASAC;IACAC,eADA,6BACA;MACA;IACA;EAHA,CATA;EAcAC;IACAC,QADA,oBACAC,GADA,EACA;MACA;IACA;EAHA;AAdA","names":["name","props","httpCode","type","description","computed","regularHttpCode","methods","needShow","key"],"sourceRoot":"docs/.vuepress/theme/global-components","sources":["ApiMethodResponse.vue"],"sourcesContent":["<template>\n  <div class=\"api-method-response-example\">\n    <div class=\"parameters-description\">\n      <div v-if=\"regularHttpCode === 200\">\n        <span class=\"green-dot\"></span> 200: OK\n      </div>\n      <div v-else>\n        <span class=\"red-dot\"></span> {{ regularHttpCode }}: Bad Request\n      </div>\n    </div>\n\n    <div\n      v-if=\"needShow('description')\"\n      class=\"api-method-response-example-description\"\n    >\n      <slot name=\"description\">\n        <p>\n          {{ description }}\n        </p>\n      </slot>\n    </div>\n\n    <slot />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ApiMethodResponse',\n  props: {\n    httpCode: {\n      type: [Number, String],\n      default: 200,\n    },\n    description: String,\n  },\n  computed: {\n    regularHttpCode() {\n      return Number(this.httpCode)\n    },\n  },\n  methods: {\n    needShow(key) {\n      return this[key] || this.$slots[key] || this.$scopedSlots[key]\n    },\n  },\n}\n</script>\n\n<style></style>\n"]}]}