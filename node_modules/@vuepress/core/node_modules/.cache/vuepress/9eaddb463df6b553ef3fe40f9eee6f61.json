{"remainingRequest":"/Users/zhaoyiming/Desktop/github/docs-v3/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhaoyiming/Desktop/github/docs-v3/docs/.vuepress/theme/components/PageEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhaoyiming/Desktop/github/docs-v3/docs/.vuepress/theme/components/PageEdit.vue","mtime":1656474814000},{"path":"/Users/zhaoyiming/Desktop/github/docs-v3/node_modules/cache-loader/dist/cjs.js","mtime":1640086848432},{"path":"/Users/zhaoyiming/Desktop/github/docs-v3/node_modules/babel-loader/lib/index.js","mtime":1654776219463},{"path":"/Users/zhaoyiming/Desktop/github/docs-v3/node_modules/cache-loader/dist/cjs.js","mtime":1640086848432},{"path":"/Users/zhaoyiming/Desktop/github/docs-v3/node_modules/vue-loader/lib/index.js","mtime":1654776219582}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBpc05pbCBmcm9tICdsb2Rhc2gvaXNOaWwnCmltcG9ydCB7IGVuZGluZ1NsYXNoUkUsIG91dGJvdW5kUkUgfSBmcm9tICcuLi91dGlsJwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdQYWdlRWRpdCcsCgogIGNvbXB1dGVkOiB7CiAgICBlZGl0TGluaygpIHsKICAgICAgY29uc3Qgc2hvd0VkaXRMaW5rID0gaXNOaWwodGhpcy4kcGFnZS5mcm9udG1hdHRlci5lZGl0TGluaykKICAgICAgICA/IHRoaXMuJHNpdGUudGhlbWVDb25maWcuZWRpdExpbmtzCiAgICAgICAgOiB0aGlzLiRwYWdlLmZyb250bWF0dGVyLmVkaXRMaW5rCgogICAgICBjb25zdCB7CiAgICAgICAgcmVwbywKICAgICAgICBkb2NzRGlyID0gJycsCiAgICAgICAgZG9jc0JyYW5jaCA9ICdtYXN0ZXInLAogICAgICAgIGRvY3NSZXBvID0gcmVwbywKICAgICAgfSA9IHRoaXMuJHNpdGUudGhlbWVDb25maWcKCiAgICAgIGlmIChzaG93RWRpdExpbmsgJiYgZG9jc1JlcG8gJiYgdGhpcy4kcGFnZS5yZWxhdGl2ZVBhdGgpIHsKICAgICAgICByZXR1cm4gdGhpcy5jcmVhdGVFZGl0TGluaygKICAgICAgICAgIHJlcG8sCiAgICAgICAgICBkb2NzUmVwbywKICAgICAgICAgIGRvY3NEaXIsCiAgICAgICAgICBkb2NzQnJhbmNoLAogICAgICAgICAgdGhpcy4kcGFnZS5yZWxhdGl2ZVBhdGgKICAgICAgICApCiAgICAgIH0KICAgICAgcmV0dXJuIG51bGwKICAgIH0sCgogICAgZWRpdExpbmtUZXh0KCkgewogICAgICByZXR1cm4gKAogICAgICAgIHRoaXMuJHRoZW1lTG9jYWxlQ29uZmlnLmVkaXRMaW5rVGV4dCB8fAogICAgICAgIHRoaXMuJHNpdGUudGhlbWVDb25maWcuZWRpdExpbmtUZXh0IHx8CiAgICAgICAgYEVkaXQgdGhpcyBwYWdlYAogICAgICApCiAgICB9LAogIH0sCgogIG1ldGhvZHM6IHsKICAgIGNyZWF0ZUVkaXRMaW5rKHJlcG8sIGRvY3NSZXBvLCBkb2NzRGlyLCBkb2NzQnJhbmNoLCBwYXRoKSB7CiAgICAgIGNvbnN0IGJpdGJ1Y2tldCA9IC9iaXRidWNrZXQub3JnLwogICAgICBpZiAoYml0YnVja2V0LnRlc3QoZG9jc1JlcG8pKSB7CiAgICAgICAgY29uc3QgYmFzZSA9IGRvY3NSZXBvCiAgICAgICAgcmV0dXJuICgKICAgICAgICAgIGJhc2UucmVwbGFjZShlbmRpbmdTbGFzaFJFLCAnJykgKwogICAgICAgICAgYC9zcmNgICsKICAgICAgICAgIGAvJHtkb2NzQnJhbmNofS9gICsKICAgICAgICAgIChkb2NzRGlyID8gZG9jc0Rpci5yZXBsYWNlKGVuZGluZ1NsYXNoUkUsICcnKSArICcvJyA6ICcnKSArCiAgICAgICAgICBwYXRoICsKICAgICAgICAgIGA/bW9kZT1lZGl0JnNwYT0wJmF0PSR7ZG9jc0JyYW5jaH0mZmlsZXZpZXdlcj1maWxlLXZpZXctZGVmYXVsdGAKICAgICAgICApCiAgICAgIH0KCiAgICAgIGNvbnN0IGdpdGxhYiA9IC9naXRsYWIuY29tLwogICAgICBpZiAoZ2l0bGFiLnRlc3QoZG9jc1JlcG8pKSB7CiAgICAgICAgY29uc3QgYmFzZSA9IGRvY3NSZXBvCiAgICAgICAgcmV0dXJuICgKICAgICAgICAgIGJhc2UucmVwbGFjZShlbmRpbmdTbGFzaFJFLCAnJykgKwogICAgICAgICAgYC8tL2VkaXRgICsKICAgICAgICAgIGAvJHtkb2NzQnJhbmNofS9gICsKICAgICAgICAgIChkb2NzRGlyID8gZG9jc0Rpci5yZXBsYWNlKGVuZGluZ1NsYXNoUkUsICcnKSArICcvJyA6ICcnKSArCiAgICAgICAgICBwYXRoCiAgICAgICAgKQogICAgICB9CgogICAgICBjb25zdCBiYXNlID0gb3V0Ym91bmRSRS50ZXN0KGRvY3NSZXBvKQogICAgICAgID8gZG9jc1JlcG8KICAgICAgICA6IGBodHRwczovL2dpdGh1Yi5jb20vJHtkb2NzUmVwb31gCiAgICAgIHJldHVybiAoCiAgICAgICAgYmFzZS5yZXBsYWNlKGVuZGluZ1NsYXNoUkUsICcnKSArCiAgICAgICAgJy9lZGl0JyArCiAgICAgICAgYC8ke2RvY3NCcmFuY2h9L2AgKwogICAgICAgIChkb2NzRGlyID8gZG9jc0Rpci5yZXBsYWNlKGVuZGluZ1NsYXNoUkUsICcnKSArICcvJyA6ICcnKSArCiAgICAgICAgcGF0aAogICAgICApCiAgICB9LAogIH0sCn0K"},{"version":3,"sources":["PageEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PageEdit.vue","sourceRoot":"docs/.vuepress/theme/components","sourcesContent":["<template>\n  <footer class=\"page-edit\">\n    <div v-if=\"editLink\" class=\"edit-link\">\n      <a :href=\"editLink\" target=\"_blank\" rel=\"noopener noreferrer\">{{\n        editLinkText\n      }}</a>\n      <OutboundLink />\n    </div>\n  </footer>\n</template>\n\n<script>\nimport isNil from 'lodash/isNil'\nimport { endingSlashRE, outboundRE } from '../util'\n\nexport default {\n  name: 'PageEdit',\n\n  computed: {\n    editLink() {\n      const showEditLink = isNil(this.$page.frontmatter.editLink)\n        ? this.$site.themeConfig.editLinks\n        : this.$page.frontmatter.editLink\n\n      const {\n        repo,\n        docsDir = '',\n        docsBranch = 'master',\n        docsRepo = repo,\n      } = this.$site.themeConfig\n\n      if (showEditLink && docsRepo && this.$page.relativePath) {\n        return this.createEditLink(\n          repo,\n          docsRepo,\n          docsDir,\n          docsBranch,\n          this.$page.relativePath\n        )\n      }\n      return null\n    },\n\n    editLinkText() {\n      return (\n        this.$themeLocaleConfig.editLinkText ||\n        this.$site.themeConfig.editLinkText ||\n        `Edit this page`\n      )\n    },\n  },\n\n  methods: {\n    createEditLink(repo, docsRepo, docsDir, docsBranch, path) {\n      const bitbucket = /bitbucket.org/\n      if (bitbucket.test(docsRepo)) {\n        const base = docsRepo\n        return (\n          base.replace(endingSlashRE, '') +\n          `/src` +\n          `/${docsBranch}/` +\n          (docsDir ? docsDir.replace(endingSlashRE, '') + '/' : '') +\n          path +\n          `?mode=edit&spa=0&at=${docsBranch}&fileviewer=file-view-default`\n        )\n      }\n\n      const gitlab = /gitlab.com/\n      if (gitlab.test(docsRepo)) {\n        const base = docsRepo\n        return (\n          base.replace(endingSlashRE, '') +\n          `/-/edit` +\n          `/${docsBranch}/` +\n          (docsDir ? docsDir.replace(endingSlashRE, '') + '/' : '') +\n          path\n        )\n      }\n\n      const base = outboundRE.test(docsRepo)\n        ? docsRepo\n        : `https://github.com/${docsRepo}`\n      return (\n        base.replace(endingSlashRE, '') +\n        '/edit' +\n        `/${docsBranch}/` +\n        (docsDir ? docsDir.replace(endingSlashRE, '') + '/' : '') +\n        path\n      )\n    },\n  },\n}\n</script>\n\n<style lang=\"stylus\">\n.page-edit\n  padding-top 1rem\n  padding-bottom 1rem\n  overflow auto\n\n  .edit-link\n    display inline-block\n    a\n      color lighten($textColor, 25%)\n      margin-right 0.25rem\n  .last-updated\n    float right\n    font-size 0.9em\n    .prefix\n      font-weight 500\n      color lighten($textColor, 25%)\n    .time\n      font-weight 400\n      color #767676\n\n@media (max-width: $MQMobile)\n  .page-edit\n    .edit-link\n      margin-bottom 0.5rem\n    .last-updated\n      font-size 0.8em\n      float none\n      text-align left\n</style>\n"]}]}