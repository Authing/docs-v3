{"remainingRequest":"/Users/zhaoyiming/Desktop/github/docs-v3/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhaoyiming/Desktop/github/docs-v3/docs/.vuepress/theme/components/Breadcrumb.vue?vue&type=style&index=0&lang=stylus&","dependencies":[{"path":"/Users/zhaoyiming/Desktop/github/docs-v3/docs/.vuepress/theme/components/Breadcrumb.vue","mtime":1656474813995},{"path":"/Users/zhaoyiming/Desktop/github/docs-v3/node_modules/css-loader/dist/cjs.js","mtime":1640086848626},{"path":"/Users/zhaoyiming/Desktop/github/docs-v3/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1654776219582},{"path":"/Users/zhaoyiming/Desktop/github/docs-v3/node_modules/postcss-loader/src/index.js","mtime":1640086848843},{"path":"/Users/zhaoyiming/Desktop/github/docs-v3/node_modules/stylus-loader/index.js","mtime":1640086849576},{"path":"/Users/zhaoyiming/Desktop/github/docs-v3/node_modules/cache-loader/dist/cjs.js","mtime":1640086848432},{"path":"/Users/zhaoyiming/Desktop/github/docs-v3/node_modules/vue-loader/lib/index.js","mtime":1654776219582}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5icmVhZGNydW1iLWNvbnRhaW5lcgogIG1hcmdpbi1ib3R0b20gLTYwcHgKICBwb3NpdGlvbiByZWxhdGl2ZQogIHotaW5kZXggMQogIG9sCiAgICBsaXN0LXN0eWxlIG5vbmUKICAgIGRpc3BsYXkgZmxleAogICAgYWxpZ24taXRlbXMgY2VudGVyCiAgICBwYWRkaW5nIDBlbQogICAgbWFyZ2luIDAKICAgIGxpbmUtaGVpZ2h0IDJyZW0KICAgIGxpCiAgICAgIGNvbG9yICM4NjkwOWMKICAgICAgZm9udC1zaXplIDE0cHgKICAgICAgcAogICAgICAgIG1hcmdpbiA5cHggMAogICAgICAgIGxpbmUtaGVpZ2h0IDEKICAgICAgJi5jcnVtYnMtZ3V0dGVyCiAgICAgICAgbWFyZ2luOiAwIDhweAogICAgICAgIGZvbnQtc2l6ZSAxMnB4CiAgICAgICY6bm90KDpsYXN0LWNoaWxkKQogICAgICAgIC5uYXYtbGluawogICAgICAgICAgLy8gY29sb3IgcmdiYSgwLDAsMCwwLjQ1KQogICAgICAgICAgY29sb3IgIzg2OTA5YwogICAgICAgICAgJjpob3ZlcgogICAgICAgICAgICBjb2xvciAkYWNjZW50Q29sb3IK"},{"version":3,"sources":["Breadcrumb.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Breadcrumb.vue","sourceRoot":"docs/.vuepress/theme/components","sourcesContent":["<template>\n  <div class=\"breadcrumb-container\">\n    <ol>\n      <template v-for=\"(item, index) of crumbs\">\n        <li :key=\"`link-${index}`\">\n          <NavLink :item=\"item\" :type=\"'bread'\" />\n        </li>\n        <li\n          class=\"crumbs-gutter\"\n          v-if=\"index !== crumbs.length - 1\"\n          :key=\"`gutter-${index}`\"\n        >\n          /\n        </li>\n      </template>\n    </ol>\n  </div>\n</template>\n\n<script>\nimport NavLink from \"@theme/components/NavLink.vue\";\n\nfunction findChildren(list, routePath) {\n  return list.find(item => {\n    if (item.path === \"/concepts/\") {\n      // concepts 特殊处理\n      return routePath === \"/concepts/\";\n    } else if (routePath.startsWith(item.path)) {\n      return true;\n    } else if (item.children) {\n      return findChildren(item.children, routePath);\n    } else {\n      return false;\n    }\n  });\n}\n\nfunction findSideBarPath(sidebars, routePath, parentPath) {\n  routePath = decodeURIComponent(routePath)\n\n  if (!sidebars) {\n    return [];\n  }\n  const finded = findChildren(sidebars, routePath);\n  if (!finded) {\n    return [];\n  }\n\n  const allPath = parentPath.concat({\n    link: finded.redirect ?? finded.path,\n    text: finded.title || finded.path\n  });\n  // 当前菜单路由已经和路由相等，已找完\n  if (finded.path === routePath) {\n    return allPath;\n  }\n\n  return findSideBarPath(finded.children, routePath, allPath);\n}\n\nexport default {\n  components: {\n    NavLink\n  },\n  props: {\n    sidebars: {\n      type: Array,\n      required: true\n    }\n  },\n  computed: {\n    crumbs() {\n      const navLinks = this.$themeLocaleConfig.nav;\n      if (!navLinks) {\n        return [];\n      }\n\n      const path = this.$route.path;\n\n      const currNav = navLinks.find(item => path.startsWith(item.link));\n\n      if (!currNav) {\n        return [];\n      }\n\n      return findSideBarPath(this.sidebars, path, [\n        {\n          link: currNav.link,\n          text: currNav.text\n        }\n      ]);\n    }\n  }\n};\n</script>\n\n<style lang=\"stylus\">\n.breadcrumb-container\n  margin-bottom -60px\n  position relative\n  z-index 1\n  ol\n    list-style none\n    display flex\n    align-items center\n    padding 0em\n    margin 0\n    line-height 2rem\n    li\n      color #86909c\n      font-size 14px\n      p\n        margin 9px 0\n        line-height 1\n      &.crumbs-gutter\n        margin: 0 8px\n        font-size 12px\n      &:not(:last-child)\n        .nav-link\n          // color rgba(0,0,0,0.45)\n          color #86909c\n          &:hover\n            color $accentColor\n</style>\n"]}]}